<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VirusTotal.NET</name>
    </assembly>
    <members>
        <member name="T:VirusTotalNET.Exceptions.AccessDeniedException">
            <summary>
            Exception that is thrown when you don't have access to the service.
            </summary>
        </member>
        <member name="T:VirusTotalNET.Exceptions.ResourceLimitException">
            <summary>
            Exception that is thrown when the number of resources exceed the allowed.
            </summary>
        </member>
        <member name="T:VirusTotalNET.Exceptions.SizeLimitException">
            <summary>
            Exception that is thrown when the file size exceeds the allowed.
            </summary>
        </member>
        <member name="T:VirusTotalNET.Exceptions.RateLimitException">
            <summary>
            Exception that is thrown when the rate limit has been hit.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.IPReport.ResponseCode">
            <summary>
            The response code. Use this to determine the status of the report.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.IPReport.VerboseMsg">
            <summary>
            Contains the message that corrosponds to the reponse code.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.DomainReport.ResponseCode">
            <summary>
            The response code. Use this to determine the status of the report.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.DomainReport.VerboseMsg">
            <summary>
            Contains the message that corrosponds to the reponse code.
            </summary>
        </member>
        <member name="F:VirusTotalNET.Objects.IPReportResponseCode.Error">
            <summary>
            There was an error in the request
            </summary>
        </member>
        <member name="F:VirusTotalNET.Objects.IPReportResponseCode.NotPresent">
            <summary>
            The item you searched for was not present in VirusTotal's dataset.
            </summary>
        </member>
        <member name="F:VirusTotalNET.Objects.IPReportResponseCode.Present">
            <summary>
            The item was indeed present and it could be retrieved.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.UrlReport.FilescanId">
            <summary>
            Filescan Id of the resource.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.UrlReport.Permalink">
            <summary>
            A permanent link that points to this specific scan.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.UrlReport.Positives">
            <summary>
            How many engines flagged this resource.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.UrlReport.Resource">
            <summary>
            Contains the id of the resource. Can be a SHA256, MD5 or other hash type.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.UrlReport.ResponseCode">
            <summary>
            The response code. Use this to determine the status of the report.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.UrlReport.ScanDate">
            <summary>
            The date the resource was last scanned.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.UrlReport.ScanId">
            <summary>
            Contains the scan id for this result.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.UrlReport.Scans">
            <summary>
            The scan results from each engine.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.UrlReport.Total">
            <summary>
            How many engines scanned this resource.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.UrlReport.URL">
            <summary>
            Contains the message that corrosponds to the reponse code.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.UrlReport.VerboseMsg">
            <summary>
            Contains the message that corrosponds to the reponse code.
            </summary>
        </member>
        <member name="F:VirusTotalNET.Objects.ScanResponseCode.Error">
            <summary>
            An error occured.
            </summary>
        </member>
        <member name="F:VirusTotalNET.Objects.ScanResponseCode.Queued">
            <summary>
            The file corresponding to the given hash was successfully queued.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.FileReport.MD5">
            <summary>
            MD5 hash of the resource.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.FileReport.Permalink">
            <summary>
            A permanent link that points to this specific scan.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.FileReport.Positives">
            <summary>
            How many engines flagged this resource.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.FileReport.Resource">
            <summary>
            Contains the id of the resource. Can be a SHA256, MD5 or other hash type.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.FileReport.ResponseCode">
            <summary>
            The response code. Use this to determine the status of the report.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.FileReport.ScanDate">
            <summary>
            The date the resource was last scanned.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.FileReport.ScanId">
            <summary>
            Contains the scan id for this result.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.FileReport.Scans">
            <summary>
            The scan results from each engine.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.FileReport.SHA1">
            <summary>
            SHA1 hash of the resource.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.FileReport.SHA256">
            <summary>
            SHA256 hash of the resource.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.FileReport.Total">
            <summary>
            How many engines scanned this resource.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.FileReport.VerboseMsg">
            <summary>
            Contains the message that corrosponds to the reponse code.
            </summary>
        </member>
        <member name="F:VirusTotalNET.Objects.ReportResponseCode.StillQueued">
            <summary>
            The requested item is still queued for analysis.
            </summary>
        </member>
        <member name="F:VirusTotalNET.Objects.ReportResponseCode.Error">
            <summary>
            There was an error in the request
            </summary>
        </member>
        <member name="F:VirusTotalNET.Objects.ReportResponseCode.NotPresent">
            <summary>
            The item you searched for was not present in VirusTotal's dataset.
            </summary>
        </member>
        <member name="F:VirusTotalNET.Objects.ReportResponseCode.Present">
            <summary>
            The item was indeed present and it could be retrieved.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.ScanEngine.Detected">
            <summary>
            True if the engine flagged the resource.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.ScanEngine.Version">
            <summary>
            Version of the engine.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.ScanEngine.Result">
            <summary>
            Contains the name of the malware, if any.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.ScanEngine.UpdateDate">
            <summary>
            The date of the latest signatures of the engine.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.ScanResult.MD5">
            <summary>
            MD5 hash of the resource.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.ScanResult.Permalink">
            <summary>
            A unique link to this particular scan result.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.ScanResult.Resource">
            <summary>
            Id of the resource.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.ScanResult.ResponseCode">
            <summary>
            The scan response code. Use this to determine the status of the scan.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.ScanResult.ScanId">
            <summary>
            The unique scan id of the resource.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.ScanResult.SHA1">
            <summary>
            SHA256 hash of the resource.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.ScanResult.SHA256">
            <summary>
            SHA256 hash of the resource.
            </summary>
        </member>
        <member name="P:VirusTotalNET.Objects.ScanResult.VerboseMsg">
            <summary>
            Contains a verbose message that corrosponds to the reponse code.
            </summary>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.#ctor(System.String)">
            <summary>
            Public constructor for VirusTotal.
            </summary>
            <param name="apiKey">The API key you got from Virus Total</param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="P:VirusTotalNET.VirusTotal.RestrictSizeLimits">
            <summary>
            When true, we check the file size before uploading it to Virus Total. The file size restrictions are based on the Virusl Total public API 2.0 documentation.
            </summary>
        </member>
        <member name="P:VirusTotalNET.VirusTotal.RestrictNumberOfResources">
            <summary>
            When true, we check the number of resources that are submitted to Virus Total. The limits are according to Virus Total public API 2.0 documentation.
            </summary>
        </member>
        <member name="P:VirusTotalNET.VirusTotal.FileSizeLimit">
            <summary>
            The maximum file size (in bytes) that the Virus Total public API 2.0 supports.
            </summary>
        </member>
        <member name="P:VirusTotalNET.VirusTotal.UseTLS">
            <summary>
            Set to false to use HTTP instead of HTTPS. HTTPS is used by default.
            </summary>
        </member>
        <member name="P:VirusTotalNET.VirusTotal.Proxy">
            <summary>
            Get or set the proxy.
            </summary>
        </member>
        <member name="P:VirusTotalNET.VirusTotal.Timeout">
            <summary>
            Get or set the timeout in miliseconds.
            </summary>
        </member>
        <member name="P:VirusTotalNET.VirusTotal.ApiUrl">
            <summary>
            The URL which the Virus Total service listens on. IF you don't set the scheme to http:// or https:// it will default to https.
            </summary>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.ScanFile(System.IO.FileInfo)">
            <summary>
            Scan a file.
            Note: It is highly encouraged to get the report of the file before scanning, in case it has already been scanned before.
            </summary>
            <param name="file">The file to scan</param>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.ScanFile(System.Byte[],System.String)">
            <summary>
            Scan a file.
            Note: It is highly encouraged to get the report of the file before scanning, in case it has already been scanned before.
            Note: Ýou are also strongly encouraged to provide the filename as it is rich metadata for the Virus Total database.
            </summary>
            <param name="file">The file to scan</param>
            <param name="filename">The filename of the file</param>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.ScanFile(System.IO.Stream,System.String)">
            <summary>
            Scan a file.
            Note: It is highly encouraged to get the report of the file before scanning, in case it has already been scanned before.
            Note: Ýou are also strongly encouraged to provide the filename as it is rich metadata for the Virus Total database.
            </summary>
            <param name="fileStream">The file to scan</param>
            <param name="filename">The filename of the file</param>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.ScanFiles(System.Collections.Generic.IEnumerable{System.Tuple{System.Byte[],System.String}})">
            <summary>
            Scan multiple files.
            Note: It is highly encouraged to get the report of the files before scanning, in case it they already been scanned before.
            Note: Ýou are also strongly encouraged to provide the filename as it is rich metadata for the Virus Total database.
            </summary>
            <param name="files">The files you wish to scan. They are a tuple of file content and filename.</param>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.ScanFiles(System.Collections.Generic.IEnumerable{System.Tuple{System.IO.Stream,System.String}})">
            <summary>
            Scan multiple files.
            Note: It is highly encouraged to get the report of the files before scanning, in case it they already been scanned before.
            Note: Ýou are also strongly encouraged to provide the filename as it is rich metadata for the Virus Total database.
            </summary>
            <param name="streams">The streams you wish to scan. They are a tuple of stream and filename.</param>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.ScanFiles(System.Collections.Generic.IEnumerable{System.IO.FileInfo})">
            <summary>
            Scan multiple files.
            Note: It is highly encouraged to get the report of the files before scanning, in case it they already been scanned before.
            </summary>
            <param name="files">The files you wish to scan.</param>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.RescanFile(System.String)">
            <summary>
            Tell VirusTotal to rescan a file without sending the actual file to VirusTotal.
            Note: Before requesting a rescan you should retrieve the latest report on the file.
            </summary>
            <param name="resource">A hash of the file. It can be an MD5, SHA1 or SHA256</param>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.RescanFile(System.IO.FileInfo)">
            <summary>
            Tell VirusTotal to rescan a file without sending the actual file to VirusTotal.
            Note: Before requesting a rescan you should retrieve the latest report on the file.
            </summary>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.RescanFile(System.Byte[])">
            <summary>
            Tell VirusTotal to rescan a file without sending the actual file to VirusTotal.
            Note: Before requesting a rescan you should retrieve the latest report on the file.
            </summary>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.RescanFiles(System.Collections.Generic.IEnumerable{System.Byte[]})">
            <summary>
            Tell VirusTotal to rescan a file.
            Note: This does not send the files to VirusTotal. It hashes the file and sends that instead.
            Note: Before requesting a rescan you should retrieve the latest report on the files.
            </summary>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.RescanFiles(System.Collections.Generic.IEnumerable{System.IO.FileInfo})">
            <summary>
            Tell VirusTotal to rescan a file.
            Note: This does not send the files to VirusTotal. It hashes the file and sends that instead.
            Note: Before requesting a rescan you should retrieve the latest report on the files.
            </summary>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.RescanFiles(System.Collections.Generic.IEnumerable{System.IO.Stream})">
            <summary>
            Tell VirusTotal to rescan a file.
            Note: This does not send the content of the streams to VirusTotal. It hashes the content and sends that instead.
            Note: Before requesting a rescan you should retrieve the latest report on the files.
            </summary>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.RescanFiles(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Tell VirusTotal to rescan a file.
            Note: This does not send the files to VirusTotal. It hashes the file and sends that instead.
            Note: Before requesting a rescan you should retrieve the latest report on the files.
            Note: You can use MD5, SHA1 or SHA256 and even mix them.
            Note: You can only request a maximum of 25 rescans.
            </summary>
            <param name="resourceList">a MD5, SHA1 or SHA256 of the files. You can also specify list made up of a combination of any of the three allowed hashes (up to 25 items), this allows you to perform a batch request with one single call.
            Note: that the files must already be present in the files store.
            </param>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetFileReport(System.Byte[])">
            <summary>
            Gets the report of the file.
            Note: This does not send the files to VirusTotal. It hashes the file and sends that instead.
            </summary>
            <param name="file">The file you wish to get a report on.</param>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetFileReport(System.IO.FileInfo)">
            <summary>
            Gets the report of the file.
            Note: This does not send the files to VirusTotal. It hashes the file and sends that instead.
            </summary>
            <param name="file">The file you wish to get a report on.</param>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetFileReport(System.String)">
            <summary>
            Gets the report of the file.
            Note: This does not send the files to VirusTotal. It hashes the file and sends that instead.
            </summary>
            <param name="resource">The resource (MD5, SHA1 or SHA256) you wish to get a report on.</param>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetFileReports(System.Collections.Generic.IEnumerable{System.Byte[]})">
            <summary>
            Gets a list of reports of the files.
            Note: This does not send the files to VirusTotal. It hashes the files and sends them instead.
            </summary>
            <param name="files">The files you wish to get reports on.</param>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetFileReports(System.Collections.Generic.IEnumerable{System.IO.FileInfo})">
            <summary>
            Gets a list of reports of the files.
            Note: This does not send the files to VirusTotal. It hashes the files and sends them instead.
            </summary>
            <param name="files">The files you wish to get reports on.</param>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetFileReports(System.Collections.Generic.IEnumerable{System.IO.Stream})">
            <summary>
            Gets a list of reports of the files.
            Note: This does not send the content of the streams to VirusTotal. It hashes the content of the stream and sends that instead.
            </summary>
            <param name="streams">The streams you wish to get reports on.</param>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetFileReports(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the report of the file represented by its hash or scan ID.
            Keep in mind that URLs sent using the API have the lowest scanning priority, depending on VirusTotal's load, it may take several hours before the file is scanned,
            so query the report at regular intervals until the result shows up and do not keep submitting the file over and over again.
            </summary>
            <param name="resourceList">SHA1, MD5 or SHA256 of the file. It can also be a scan ID of a previous scan.</param>
            <returns></returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.ScanUrl(System.String)">
            <summary>
            Scan the given URL. The URL will be downloaded by VirusTotal and processed.
            Note: Before performing your submission, you should retrieve the latest report on the URL.
            </summary>
            <param name="url">The url to process.</param>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.ScanUrl(System.Uri)">
            <summary>
            Scan the given URL. The URL will be downloaded by VirusTotal and processed.
            Note: Before performing your submission, you should retrieve the latest report on the URL.
            </summary>
            <param name="url">The url to process.</param>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.ScanUrls(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Scan the given URLs. The URLs will be downloaded by VirusTotal and processed.
            Note: Before performing your submission, you should retrieve the latest reports on the URLs.
            </summary>
            <param name="urlList">The urls to process.</param>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.ScanUrls(System.Collections.Generic.IEnumerable{System.Uri})">
            <summary>
            Scan the given URLs. The URLs will be downloaded by VirusTotal and processed.
            Note: Before performing your submission, you should retrieve the latest reports on the URLs.
            </summary>
            <param name="urlList">The urls to process.</param>
            <returns>The scan results.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetUrlReport(System.String,System.Boolean)">
            <summary>
            Gets a scan report from an URL
            </summary>
            <param name="url">The URL you wish to get the report on.</param>
            <param name="scanIfNoReport">Set to true if you wish VirusTotal to scan the URL if it is not present in the database.</param>
            <returns>A list of reports</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetUrlReport(System.Uri,System.Boolean)">
            <summary>
            Gets a scan report from an URL
            </summary>
            <param name="url">The URL you wish to get the report on.</param>
            <param name="scanIfNoReport">Set to true if you wish VirusTotal to scan the URL if it is not present in the database.</param>
            <returns>A list of reports</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetUrlReports(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            Gets a scan report from a list of URLs
            </summary>
            <param name="urlList">The URLs you wish to get the reports on.</param>
            <param name="scanIfNoReport">Set to true if you wish VirusTotal to scan the URLs if it is not present in the database.</param>
            <returns>A list of reports</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetUrlReports(System.Collections.Generic.IEnumerable{System.Uri},System.Boolean)">
            <summary>
            Gets a scan report from a list of URLs
            </summary>
            <param name="urlList">The URLs you wish to get the reports on.</param>
            <param name="scanIfNoReport">Set to true if you wish VirusTotal to scan the URLs if it is not present in the database.</param>
            <returns>A list of reports</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetIPReport(System.String)">
            <summary>
            Gets a scan report from an IP
            </summary>
            <param name="ip">The IP you wish to get the report on.</param>
            <returns>A report</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetIPReport(System.Net.IPAddress)">
            <summary>
            Gets a scan report from an IP
            </summary>
            <param name="ip">The IP you wish to get the report on.</param>
            <returns>A report</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetDomainReport(System.String)">
            <summary>
            Gets a scan report from a domain
            </summary>
            <param name="domain">The domain you wish to get the report on.</param>
            <returns>A report</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.CreateComment(System.Byte[],System.String)">
            <summary>
            Creates a comment on a file denoted by its hash and/or scan ID.
            </summary>
            <param name="file">The file you wish to create a comment on</param>
            <param name="comment">The comment you wish to add.</param>
            <returns>A ScanResult object containing information about the resource.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.CreateComment(System.IO.FileInfo,System.String)">
            <summary>
            Creates a comment on a file denoted by its hash and/or scan ID.
            </summary>
            <param name="file">The file you wish to create a comment on</param>
            <param name="comment">The comment you wish to add.</param>
            <returns>A ScanResult object containing information about the resource.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.CreateComment(System.String,System.String)">
            <summary>
            Creates a comment on a file denoted by its hash and/or scan ID.
            </summary>
            <param name="resource">The SHA256 hash or scan ID of the resource.</param>
            <param name="comment">The comment you wish to add.</param>
            <returns>A ScanResult object containing information about the resource.</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetPublicFileScanLink(System.String)">
            <summary>
            Gives you a link to a file analysis based on its hash.
            </summary>
            <returns>A link to VirusTotal that contains the report</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetPublicFileScanLink(System.IO.FileInfo)">
            <summary>
            Gives you a link to a file analysis based on its hash.
            </summary>
            <returns>A link to VirusTotal that contains the report</returns>
        </member>
        <member name="M:VirusTotalNET.VirusTotal.GetPublicUrlScanLink(System.String)">
            <summary>
            Gives you a link to a URL analysis.
            </summary>
            <returns>A link to VirusTotal that contains the report</returns>
        </member>
    </members>
</doc>
